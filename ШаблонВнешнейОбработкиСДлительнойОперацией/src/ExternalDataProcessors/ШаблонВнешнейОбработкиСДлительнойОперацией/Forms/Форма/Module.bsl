
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьВспомогательныеСвойстваДляДлительнойОперации();
	
	АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьВФоне(Команда)

	ОчиститьСообщения();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьВФонеЗавершение", ЭтотОбъект);
	
	// TODO: Проверить параметры, изменить текст сообщения
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется фоновое задание...'");
	
	Если Не _СвойстваОбработки.ЭтоДополнительнаяОбработка И Не ЗначениеЗаполнено(_СвойстваОбработки.АдресВнешнейОбработки) Тогда
		ДвоичныеДанные = Новый ДвоичныеДанные(_СвойстваОбработки.ИспользуемоеИмяФайла);
		_СвойстваОбработки.АдресВнешнейОбработки = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	КонецЕсли;
		
	РезультатДлительнойОперации = РезультатДлительнойОперации();
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(РезультатДлительнойОперации, ОписаниеОповещения, ПараметрыОжидания);	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция РезультатДлительнойОперации()
	
	// TODO: Проверить параметры, изменить наименование фонового задания
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Наименование фонового задания'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.ЗапуститьНеВФоне = Ложь;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
	
	ПараметрыПроцедуры = Новый Структура;
	// TODO: Указать параметры, которые будут переданы в параметр процедуры, выполняемой в фоне
	// ПараметрыПроцедуры.Вставить("ПроизволныйПараметр", "ЗначениеПараметра");
	
	// При выполнении процедуры модуля объекта, реквизиты обработки будут пустыми т.к создается новый
	// экземпляр обработки, поэтому, при необходимости использования реквизитов обработки, их необходимо
	// явно передавать через ПараметрыПроцедуры, потом обрабатывать в процедуры модуля объекта, а затем
	// передавать в качестве результата и заполнять.
	ЗаписатьРеквизитыИТабличныеЧасти(ПараметрыПроцедуры);
	
	ПараметрыЗапускаПроцедуры = Новый Структура;
	ПараметрыЗапускаПроцедуры.Вставить("ДополнительнаяОбработкаСсылка", _СвойстваОбработки.ДополнительнаяОбработкаСсылка);
	ПараметрыЗапускаПроцедуры.Вставить("ЭтоВнешняяОбработка", _СвойстваОбработки.ЭтоВнешняяОбработка);
	ПараметрыЗапускаПроцедуры.Вставить("ПараметрыВыполнения", ПараметрыПроцедуры);
	// TODO: Указать процедуру модуля объекта, выполняющуюся в фоне
	ПараметрыЗапускаПроцедуры.Вставить("ИмяМетода", "ОбработкаДанныхВФоне");
	
	Если _СвойстваОбработки.ЭтоВнешняяОбработка И Не _СвойстваОбработки.ЭтоДополнительнаяОбработка Тогда
		//@skip-check missing-temporary-file-deletion
		_СвойстваОбработки.ИмяВременногоФайлаОбработки = ПолучитьИмяВременногоФайла(".epf");
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(_СвойстваОбработки.АдресВнешнейОбработки);
		ДвоичныеДанные.Записать(_СвойстваОбработки.ИмяВременногоФайлаОбработки);
		ПараметрыЗапускаПроцедуры.Вставить("ИмяОбработки", _СвойстваОбработки.ИмяВременногоФайлаОбработки);
	КонецЕсли;	
	
	Возврат ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения,
												  "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки",
												  ПараметрыЗапускаПроцедуры,
												  АдресРезультата);
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьВФонеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	УдалитьВременныйФайл();
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		// TODO: Обработка результата выполнения
		ОбработатьРезультатВыполненияВФонеНаСервере();
	ИначеЕсли Результат.Статус = "Отменено" Тогда
		// TODO: Обработка отмены
	Иначе // Ошибка
		// TODO: Обработка ошибки
		ПоказатьПредупреждение(, Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
	ОбработатьСообщенияПользователю(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатВыполненияВФонеНаСервере()
	
	РезультатВыполненияПроцедуры = ПолучитьИзВременногоХранилища(АдресРезультата);
	ПрочитатьРеквизитыИТабличныеЧасти(РезультатВыполненияПроцедуры);
	
	// TODO: Обработать результат выполнения
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункцииДлительнойОперации

&НаСервере
Процедура ЗаполнитьВспомогательныеСвойстваДляДлительнойОперации()
	
	_СвойстваОбработки = Новый Структура;
	_СвойстваОбработки.Вставить("ДополнительнаяОбработкаСсылка");
	_СвойстваОбработки.Вставить("ЭтоВнешняяОбработка", "");
	_СвойстваОбработки.Вставить("ИспользуемоеИмяФайла", "");
	_СвойстваОбработки.Вставить("АдресВнешнейОбработки", "");
	_СвойстваОбработки.Вставить("ИмяВременногоФайлаОбработки", "");
	_СвойстваОбработки.Вставить("ЭтоДополнительнаяОбработка", Ложь);
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Параметры.Свойство("ДополнительнаяОбработкаСсылка", _СвойстваОбработки.ДополнительнаяОбработкаСсылка);
	_СвойстваОбработки.ЭтоВнешняяОбработка = Не Метаданные.Обработки.Содержит(ОбработкаОбъект.Метаданные());
	_СвойстваОбработки.ЭтоДополнительнаяОбработка = ЗначениеЗаполнено(_СвойстваОбработки.ДополнительнаяОбработкаСсылка);
	_СвойстваОбработки.ИспользуемоеИмяФайла = ОбработкаОбъект.ИспользуемоеИмяФайла;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработатьСообщенияПользователю(Результат)
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Сообщения <> Неопределено Тогда
		Для Каждого СообщениеПользователю Из Результат.Сообщения Цикл
			СообщениеПользователю.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьВременныйФайл()

	Файл = Новый Файл(_СвойстваОбработки.ИмяВременногоФайлаОбработки);
	Если Файл.Существует() Тогда
		УдалитьФайлы(_СвойстваОбработки.ИмяВременногоФайлаОбработки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРеквизитыИТабличныеЧасти(ПараметрыПроцедуры)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");	
	ОбработкаОбъект.ЗаписатьРеквизитыИТабличныеЧасти(ПараметрыПроцедуры);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьРеквизитыИТабличныеЧасти(РезультатВыполненияПроцедуры)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");	
	ОбработкаОбъект.ПрочитатьРеквизитыИТабличныеЧасти(РезультатВыполненияПроцедуры);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
